<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mingway</title>
    <description>Learning About Object-C、Swift、Nodejs、MogonDB、Git、Sketch、Product etc.</description>
    <link>http://keyue.me/</link>
    <atom:link href="http://keyue.me/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 03 Jul 2016 00:40:15 +0800</pubDate>
    <lastBuildDate>Sun, 03 Jul 2016 00:40:15 +0800</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>WWDC 2016 Session 204 iMessage App and Stickers</title>
        <description>&lt;h4&gt;What&amp;#39;s iMessage Apps&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://o9lammkmn.bkt.clouddn.com/IMG_3203.JPG?imageView2/2/w/600&quot; alt=&quot;Mou icon&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;iMessage Apps是iOS X新推出的一个概念，这种App作为消息的内容运行在iMessages应用当中。iMessage Apps可以提供三种类型的消息：&lt;/p&gt;

&lt;p&gt;1.Interactive Message,这种消息发出去后，用户点击这条消息就会运行对应的App。&lt;/p&gt;

&lt;p&gt;这里说的App不是我们之前做的App，而是iMessage App, 本质上还是Extension，相比Extension 存在一个比较大的区别，就是没必要存在containing application,也就是说iMessage App可以单独存在;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://o9lammkmn.bkt.clouddn.com/IMG_3200.JPG?imageView2/2/w/600&quot; alt=&quot;Mou icon&quot;&gt;
&lt;img src=&quot;http://o9lammkmn.bkt.clouddn.com/IMG_3206.JPG?imageView2/2/w/600&quot; alt=&quot;Mou icon&quot;&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2.Stickers,这种消息可以理解为贴纸。
创建Sticker Pack Application 把Sticker中需要的图片拖进assets，如果需要的是动图，需要创建一个Sticker Sequence,然后把每一帧PNG拖进去，此外Apple 提醒，Sticker还应该在各种背景下测试，有可能在不同场景中被使用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://o9lammkmn.bkt.clouddn.com/IMG_3201.JPG?imageView2/2/w/400&quot; alt=&quot;Mou icon&quot;&gt;&lt;/p&gt;

&lt;h5&gt;关于APNG与gif白边问题的讨论：&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.ibireme.com/2015/11/02/mobile_image_benchmark/&quot;&gt;移动端图片格式调研&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://isux.tencent.com/introduction-of-apng.html&quot;&gt;腾讯PNG格式转换APNG工具&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/iSparta/iSparta&quot;&gt;github 传送门&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;3.Other Content(Photos,Videos,Text,Links)。Apple还提供了一种更容易让用户发现iMessage Apps的功能，就是如果你接收到一条消息，你的手机上又没有安装这个iMessage App，在消息下面会显示这条消息的出处，你点击后会直接启动Message AppStore。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;关于 Custom Sticker App:&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;1.可以定制UI,比如显示的Layout、background color等&lt;/p&gt;

&lt;p&gt;2.可以动态创建Sticker,比如,从Server上Download sticker,否则只能在Message AppStore&lt;/p&gt;

&lt;p&gt;3.可以使用摄像头创建Sticker&lt;/p&gt;

&lt;p&gt;4.可以做应用内支付，付费后激活某些Stickers&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;iMessage Apps只能运行在iOS X上，但是macOS和WatchOS都可以接收到iMessage Apps发送的消息。
MessagesFramework也是iOS X推出的东西，它作为Message应用和iMessage Apps直接的桥梁，通过MessagesFramework我们可以接收到Message应用的回调，也可以向Message应用发送消息。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://o9lammkmn.bkt.clouddn.com/IMG_3198.JPG?imageView2/2/w/600&quot; alt=&quot;Mou icon&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://o9lammkmn.bkt.clouddn.com/IMG_3204.JPG?imageView2/2/w/600&quot; alt=&quot;Mou icon&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://o9lammkmn.bkt.clouddn.com/IMG_3205.JPG?imageView2/2/w/600&quot; alt=&quot;Mou icon&quot;&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 29 Jun 2016 19:32:24 +0800</pubDate>
        <link>http://keyue.me/2016/06/WWDC-2016-Session-204-iMessage-App-and-Stickers/</link>
        <guid isPermaLink="true">http://keyue.me/2016/06/WWDC-2016-Session-204-iMessage-App-and-Stickers/</guid>
        
        
      </item>
    
      <item>
        <title>git</title>
        <description>&lt;h4&gt;写在前面&lt;/h4&gt;

&lt;p&gt;周三刚在公司内部做完git的分享，这里稍微再整理下，方便以后查看。 &lt;/p&gt;

&lt;p&gt;在团队项目开发迭代过程中，版本控制是必不可缺少的。目前，版本控制系统主要分为集中式和分布式 ，即svn和git(还有其他版本控制系统：cvs,vvs)。在svn下我们常配合图形管理工具 CornerStore使用、git 常配合图形管理工具 SourceTree 使用。git是当下最流行的分布式版本控制系统，今天，我来分享一下git的使用。&lt;/p&gt;

&lt;h4&gt;git与svn的不同&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;本质区别：
svn集中式，版本库集中存放在中央服务器，工作时，每个人需要先从中央服务器获取最新的版本，然后在属于自己的分支下工作，完成工作后，再提交到中央服务器；git分布式，相当于每一个电脑都是一个完整的版本库，可以减少中央服务器挂掉所带来的严重后果。&lt;/li&gt;
&lt;li&gt;联网需求不同：
git中，不必联网就能看到版本迭代的信息和创建分支，svn需要在联网的情况下才能满足上述要求。&lt;/li&gt;
&lt;li&gt;分支管理难易程度不同：
在svn中，分支作为版本库中一个目录，若需要查看是否合并，还需要运行svn propget svn:mergeinfo指令；而在git中，可以快速在几个分支中切换和快速合并。&lt;/li&gt;
&lt;li&gt;存储方式不同：
svn是按文件存储，git是按元数据方式存储。因此，每次从服务器pull代码的时候，svn相当于打包下载，git是只更新最新被修改的文件。&lt;/li&gt;
&lt;li&gt;权限问题：
在svn中，可以设定每个账号的权限，比如只读、读写权限等，而git就没有相应的权限控制，相同Team下的iOS、Android、NodeJs项目。这也正是一些公司仍然使用svn的原因。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;git常用命令&lt;/h4&gt;

&lt;!--1. 设置
    1. config命令
        - git config --global user.name lavor：配置全局用户名，若不要“--global”或者将“global”改为“local”则表示配置局部用户名
        - git config --global user.email lavor@qq.com：配置全局电子邮箱
        - git config --global alias.cm commit:配置别名，为git命令配置别名，还可以配置复合操作，比如 git config --global alias.pom &#39;push origin master&#39;注意复合操作中不可以带-与&quot;&quot;
        - git config --list：显示所有配置信息
    2. help命令
        - git help：显示帮助信息，会显示一些常见git命令及其意义--&gt;

&lt;ol&gt;
&lt;li&gt;创建项目

&lt;ol&gt;
&lt;li&gt;init命令

&lt;ul&gt;
&lt;li&gt;git init：在本地初始化一个git仓库&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;clone命令

&lt;ul&gt;
&lt;li&gt;git clone &lt;a href=&quot;mailto:git@github.com&quot;&gt;git@github.com&lt;/a&gt;:lavor-zl/Github-Git.git：从远程服务器克隆一个仓库到本地&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;基本操作

&lt;ol&gt;
&lt;li&gt;add命令

&lt;ul&gt;
&lt;li&gt;git add README：添加工作目录的文件到暂存区&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;status命令

&lt;ul&gt;
&lt;li&gt;git status：显示工作树的状态，一般有三种状态

&lt;ul&gt;
&lt;li&gt;Untracked files：未被跟踪的文件，表示是工作目录新增加的文件&lt;/li&gt;
&lt;li&gt;Changes not staged for commit：工作目录中修改了文件，但是没有被添加到暂存区&lt;/li&gt;
&lt;li&gt;Changes to be committed:添加到暂存区的文件，等待提交&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;commit命令

&lt;ul&gt;
&lt;li&gt;git commit -m &amp;quot;提交消息&amp;quot;：提交暂存区的文件，带有提交消息&lt;/li&gt;
&lt;li&gt;git commit -a -m &amp;quot;提交消息&amp;quot;：跳过暂存区，直接提交工作目录中所有改变的文件，但是不能提交工作目录中新增的文件&lt;/li&gt;
&lt;li&gt;git commit --author=lavor -m &amp;quot;提交消息&amp;quot;：提交暂存区的文件，并重写提交作者&lt;/li&gt;
&lt;li&gt;git commit --date=06.13.2016T09:00:00 -m &amp;quot;提交消息&amp;quot;：提交暂存区的文件，并重写提交日期&lt;/li&gt;
&lt;li&gt;git commit --amend -m &amp;quot;提交消息&amp;quot;：通过创建一个新的提交，以替换当前分支的前端。所代表的含义就是在最新一次提交的基础上进行提交。比如我们完成了最新一次提交，并且这次提交完成后我们对工作目录进行了一些修改，但是我们发现某个文件忘了添加到暂存区并提交，我们可以先添加该文件到暂存区，然后利用该命令进行提交。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;reset命令

&lt;ul&gt;
&lt;li&gt;git reset：将暂存区的所有文件重置到当前分支的HEAD&lt;/li&gt;
&lt;li&gt;git reset &lt;commit&gt; files：将暂存区的指定文件重置到指定的&lt;commit&gt;,&lt;commit&gt;既可以是commit的hash（或者hash前7位）也可以是HEAD及其祖先，HEAD~1表示HEAD的父亲，是HEAD的前一次提交，没有&lt;commit&gt;时默认是HEAD。&lt;/li&gt;
&lt;li&gt;git reset [--hard|soft|mixed|merge|keep] [&lt;commit&gt;]：将当前的分支重设到指定的&lt;commit&gt;，并且根据mode有可能更新暂存区和工作目录。mode的取值可以是hard、soft、mixed、merged、keep。

&lt;ul&gt;
&lt;li&gt;hard：重置暂存区与工作目录到指定提交，删除&lt;commit&gt;之后的所有提交并将HEAD指向该提交，此操作危险指数较大（应慎用）&lt;/li&gt;
&lt;li&gt;soft：暂存区与工作目录不会变化，仅仅删除&lt;commit&gt;之后的所有提交并将HEAD指向该提交&lt;/li&gt;
&lt;li&gt;mixed：默认的，重置暂存区到指定提交，删除&lt;commit&gt;之后的所有提交并将HEAD指向该提交&lt;/li&gt;
&lt;li&gt;merge与keep用的比较少，暂时不讨论&lt;br&gt;&lt;/li&gt;
&lt;li&gt;HEAD是指向当前分支引用的指针，该指针指向在该分支上的最后一个提交的指针。这意味着HEAD将是下一个创建的提交的父亲。一般来说，把你的HEAD作为你最后一次提交的快照，是最简单的。HEAD~1表示HEAD的前一次提交，HEAD~2表示HEAD的前两次提交，以此类推&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;rm命令

&lt;ul&gt;
&lt;li&gt;git rm files：删除工作目录的文件&lt;/li&gt;
&lt;li&gt;git rm -f files：强制删除工作目录的文件，不做更新检查&lt;/li&gt;
&lt;li&gt;git rm --cached files：删除暂存区的文件&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;mv命令

&lt;ul&gt;
&lt;li&gt;git mv oldfile newfile：为文件重命名&lt;/li&gt;
&lt;li&gt;git mv files dir：移动文件到指定目录&lt;/li&gt;
&lt;li&gt;git mv -f oldfile newfile：强制为文件重命名，即使目标文件已存在&lt;/li&gt;
&lt;li&gt;git mv -f files dir：强制移动文件到指定目录名，即使目标文件已存在&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;分支与合并

&lt;ol&gt;
&lt;li&gt;branch命令

&lt;ul&gt;
&lt;li&gt;git branch：查看所有分支&lt;/li&gt;
&lt;li&gt;git branch branchname：创建分支&lt;/li&gt;
&lt;li&gt;git branch branchname &lt;commit&gt;：以特定提交为基创建分支&lt;/li&gt;
&lt;li&gt;git branch -d branchname：删除分支&lt;/li&gt;
&lt;li&gt;git branch -D branchname：强制删除分支&lt;/li&gt;
&lt;li&gt;git branch -m [oldbranchname] newbranchname：移动或者删除分支&lt;/li&gt;
&lt;li&gt;git branch -M [oldbranchname] newbranchname：强制移动或者删除分支&lt;/li&gt;
&lt;li&gt;git branch -r：列出所有被跟踪的远程分支&lt;/li&gt;
&lt;li&gt;git branch -r -d branchname：删除被跟踪的远程分支&lt;/li&gt;
&lt;li&gt;git branch -a：列出所有本地分支与被跟踪的远程分支&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;checkout命令

&lt;ul&gt;
&lt;li&gt;git checkout:检查本地仓库分支与远程仓库分支的差异&lt;/li&gt;
&lt;li&gt;git checkout branchname|tagname：切换分支或切换到指定tag，同名时优先切换分支&lt;/li&gt;
&lt;li&gt;git checkout tags/tagname：切换到指定tag&lt;/li&gt;
&lt;li&gt;git checkout -b branchname：新建分支并切换到该分支上&lt;/li&gt;
&lt;li&gt;git checkout -B branchname：强制新建分支并切换到该分支上&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;merge命令

&lt;ul&gt;
&lt;li&gt;git merge branchname：将指定分支合并到当前分支上(默认附带提交操作)，在merge后面使用-m &lt;message&gt;表示提交消息&lt;/li&gt;
&lt;li&gt;git merge &lt;commit&gt;：将指定提交合并到当前分支上&lt;/li&gt;
&lt;li&gt;git merge oldbranchname newbranchname：将oldbranchname分支合并到newbranchname分支上&lt;/li&gt;
&lt;li&gt;git merge --squash branchname：将指定分支上所有修改放入当前分支工作目录与暂存区，不提交&lt;/li&gt;
&lt;li&gt;git merge no--squash branchname：将指定分支上所有修改放入当前分支工作目录与暂存区，并提交&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;mergetool命令

&lt;ul&gt;
&lt;li&gt;git mergetool：在“merge”命令执行之后出现冲突时执行该命令，用来解决合并的冲突，冲突解决完了不要忘了提交&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;stash命令

&lt;ul&gt;
&lt;li&gt;git stash：储藏工作目录与暂存区的状态到堆栈中&lt;/li&gt;
&lt;li&gt;git stash pop [stash@{id}]：恢复到指定储藏的状态（默认是最近一次储藏的状态），并从堆栈中移除该储藏&lt;/li&gt;
&lt;li&gt;git stash apply [stash@{id}]：恢复到指定储藏的状态（默认是最近一次储藏的状态）&lt;/li&gt;
&lt;li&gt;git stash drop [stash@{id}]:并从堆栈中移除指定储藏（默认是最近一次储藏）&lt;/li&gt;
&lt;li&gt;git stash list：显示所有储藏信息&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;tag命令

&lt;ul&gt;
&lt;li&gt;同大多数 VCS 一样，Git 也可以对某一时间点上的版本打上标签。&lt;/li&gt;
&lt;li&gt;git tag：列出所有标签&lt;/li&gt;
&lt;li&gt;git tag -l &amp;#39;v1.*&amp;#39;：列出符合一定条件的标签&lt;/li&gt;
&lt;li&gt;git tag tagname：新建标签&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;分享与更新项目

&lt;ol&gt;
&lt;li&gt;fetch命令

&lt;ul&gt;
&lt;li&gt;git fetch：下载远程仓库“origin”到本地&lt;/li&gt;
&lt;li&gt;git fetch remoterepository：下载指定远程仓库到本地&lt;/li&gt;
&lt;li&gt;git fetch remoterepository branchname：下载指定远程仓库指定分支到本地&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;pull命令

&lt;ul&gt;
&lt;li&gt;git pull remoterepository branchname[:localbranch]：拉取指定远程仓库指定分支到本地仓库指定分支（默认是当前分支）&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;push命令

&lt;ul&gt;
&lt;li&gt;git push remoterepository localbranch[:remotebranch] [--tags]：推送本地仓库指定分支到远程仓库指定分支（默认是与本地分支同名的远程分支），默认是不推送标签到远程仓库的，加上--tags就会推送标签&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;remote命令

&lt;ul&gt;
&lt;li&gt;git remote：查看所有与本地仓库关联的远程仓库&lt;/li&gt;
&lt;li&gt;git remote -v：查看所有与本地仓库关联的远程仓库，并显示url
git remote add remote-name remote-url：添加与本地仓库关联的远程仓库&lt;/li&gt;
&lt;li&gt;git remote rename oldname newname：为远程仓库重命名
git remote remove remote-name：移除远程仓库&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;submodule命令

&lt;ul&gt;
&lt;li&gt;git submodule add repository-url dir：添加仓库到指定目录，使之成为本仓库的子模块&lt;/li&gt;
&lt;li&gt;git submodule init：初始化子模块&lt;/li&gt;
&lt;li&gt;git submodule update：更新子模块&lt;/li&gt;
&lt;li&gt;子模块是本仓库依赖的另一个仓库，但是我们不会对所依赖的仓库（子模块）进行修改，只会在必要的时候进行更新操作。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;考察与比较

&lt;ol&gt;
&lt;li&gt;show命令

&lt;ul&gt;
&lt;li&gt;git show [-times]：显示最近times次（默认是一次）提交的所有对象信息&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;log命令

&lt;ul&gt;
&lt;li&gt;git log：查看提交记录&lt;/li&gt;
&lt;li&gt;git log --all：查看所有提交记录&lt;/li&gt;
&lt;li&gt;git log --oneline：查看提交记录，以oneline形式显示，只显示一行，显示的内容时提交hash的前7位与提交消息&lt;/li&gt;
&lt;li&gt;git log -p -times：表示查看最近times次提交改变的内容&lt;/li&gt;
&lt;li&gt;git log -stat [-times]：查看最近times次（默认是所有）提交记录，并显示文件的差异分析&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;diff命令

&lt;ul&gt;
&lt;li&gt;git diff：查看工作目录与暂存区的差异&lt;/li&gt;
&lt;li&gt;git diff --cached [&lt;commit&gt;]：查看暂存区与指定提交（默认是HEAD）的差异&lt;/li&gt;
&lt;li&gt;git diff &lt;commit&gt;：查看工作目录与指定提交的差异&lt;/li&gt;
&lt;li&gt;git diff &lt;commit&gt;：查看工作目录与指定提交的差异&lt;/li&gt;
&lt;li&gt;git diff &lt;commit&gt; &lt;commit&gt;：查看两次指定提交的差异&lt;/li&gt;
&lt;li&gt;git diff branchname：查看工作目录与指定分支的差异&lt;/li&gt;
&lt;li&gt;git diff branchname branchname：查看两个指定分支间的差异&lt;/li&gt;
&lt;li&gt;上面的所有操作后面都可以加上-- dir表示查看该目录下面的差异，在后面加上patchname.patch表示将差异生成补丁，patchname是补丁的名字。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;shortlog命令

&lt;ul&gt;
&lt;li&gt;git shortlog：显示总提交次数与每次提交的提交消息&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;describe命令

&lt;ul&gt;
&lt;li&gt;git describe [&lt;commit&gt;|&lt;tag&gt;]：查看指定提交或者指定标签（默认是最近一次提交）的注解标签信息&lt;/li&gt;
&lt;li&gt;git desribe --tags [&lt;commit&gt;|&lt;tag&gt;]：查看指定提交或者指定标签（默认是最近一次提交）的标签信息&lt;/li&gt;
&lt;li&gt;git desribe --all [&lt;commit&gt;|&lt;tag&gt;]：查看指定提交或者指定标签（默认是最近一次提交）的引用信息&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;reflog命令

&lt;ul&gt;
&lt;li&gt;git reflog：显示所有提交，下拉，推送，与切换分支操作&lt;/li&gt;
&lt;li&gt;git reflog --all：显示所有提交，下拉，推送操作&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;修补　

&lt;ol&gt;
&lt;li&gt;apply命令

&lt;ul&gt;
&lt;li&gt;git apply [--index|--cached] patchname.patch：在暂存区与工作目录或者暂存区（默认是工作目录）打补丁&lt;/li&gt;
&lt;li&gt;git apply --reverse|-R patchname.patch：反向打补丁&lt;/li&gt;
&lt;li&gt;git apply --reject patchname.patch：打补丁，将没有冲突的文件合并，将有冲突的文件标记出来，并生成对应的.rej文件&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;cherry-pick命令

&lt;ul&gt;
&lt;li&gt;git cherry-pick &lt;commit&gt;：将另一个分支上面的指定提交应用到当前分支上&lt;/li&gt;
&lt;li&gt;git cherry-pick banchname：将指定分支上面的最后一次提交应用到当前分支上&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;rebase命令

&lt;ul&gt;
&lt;li&gt;git rebase branchname：将指定分支上所有修改应用到当前分支上&lt;/li&gt;
&lt;li&gt;git rebase branchname branchname：将第一个指定分支上所有修改应用到第二个分支上&lt;/li&gt;
&lt;li&gt;在rebase加上-i会提供交互式的变基操作，在交互式操作中常用命令：&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;revert命令

&lt;ul&gt;
&lt;li&gt;git revert &lt;commit&gt;：恢复一个指定提交&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;调试

&lt;ol&gt;
&lt;li&gt;bisect命令

&lt;ul&gt;
&lt;li&gt;使用二分查找，找到引入bug的提交

&lt;ul&gt;
&lt;li&gt;git bisect start：开始二分查找&lt;/li&gt;
&lt;li&gt;git bisect bad [&lt;commit&gt;]：设置指定提交（默认是当前分支）为bad&lt;/li&gt;
&lt;li&gt;git bisect good [&lt;commit&gt;]：设置指定提交（默认是当前分支）为good&lt;/li&gt;
&lt;li&gt;输入了上面三个命令后就会自动开始二分查找，我们之后只需要标记当前提交时bad还是good就行了，如果当前找的的提交时bad就输入git bisect bad，否则输入git bisect good直到找到有bug的提交。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;blame命令

&lt;ul&gt;
&lt;li&gt;显示修改和作者最后修改的文件的每一行，这就是一个“问责”的命令，如果哪里有问题，我们可以很快地找到该问题是谁导致的。&lt;/li&gt;
&lt;li&gt;git blame filename：查看指定文件所有的操作者，看看是谁错误地修改了该文件&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;grep命令

&lt;ul&gt;
&lt;li&gt;git grep keys：在工作目录中所有文件中搜索keys&lt;/li&gt;
&lt;li&gt;git grep --cached keys：在暂存区中所有文件中搜索keys&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;学习资料推荐&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%85%B3%E4%BA%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6&quot;&gt;GitPro2&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内容很多,很详细,堪称权威,而且还有中文版,还有pdf等下载,一定要看看.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://rogerdudler.github.io/git-guide/index.zh.html&quot;&gt;git-简明指南(很棒)&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;非常棒的指南,极力推荐&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/16ad0722e4cc&quot;&gt;Git简明教程&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;非常实用的git常用命令总结&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Gazler/githug&quot;&gt;git通关小游戏&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;一个git的游戏,现在一共有54个关卡,从init开始,让你在玩的过程中学习git,挺有意思&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://learngitbranching.js.org&quot;&gt;learnGitBranching&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;关于Learn Git Branching的游戏,很不错,值得推荐&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 13 May 2016 11:08:08 +0800</pubDate>
        <link>http://keyue.me/2016/05/git/</link>
        <guid isPermaLink="true">http://keyue.me/2016/05/git/</guid>
        
        
      </item>
    
      <item>
        <title>Hello World - Vno</title>
        <description>&lt;h4&gt;What&amp;#39;s this&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/onevcat/vno-jekyll&quot;&gt;Vno Jekyll&lt;/a&gt; is a theme for &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;. It is a port of my Ghost theme &lt;a href=&quot;https://github.com/onevcat/vno&quot;&gt;vno&lt;/a&gt;, which is originally developed from &lt;a href=&quot;https://github.com/daleanthony/uno&quot;&gt;Dale Anthony&amp;#39;s Uno&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Usage&lt;/h4&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git clone https://github.com/onevcat/vno-jekyll.git your_site
$ cd your_site
$ bundler install
$ bundler exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;Your site with &lt;code&gt;Vno Jekyll&lt;/code&gt; enabled should be accessible in &lt;a href=&quot;http://127.0.0.1:4000&quot;&gt;http://127.0.0.1:4000&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more information about Jekyll, please visit &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&amp;#39;s site&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Configuration&lt;/h4&gt;

&lt;p&gt;All configuration could be done in &lt;code&gt;_config.yml&lt;/code&gt;. Remember you need to restart to serve the page when after changing the config file. Everything in the config file should be self-explanatory.&lt;/p&gt;

&lt;h4&gt;Background image and avatar&lt;/h4&gt;

&lt;p&gt;You could replace the background and avatar image in &lt;code&gt;assets/images&lt;/code&gt; folder to change them.&lt;/p&gt;

&lt;h4&gt;Sites using Vno&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://onevcat.com&quot;&gt;My blog&lt;/a&gt; is using &lt;code&gt;Vno Jekyll&lt;/code&gt; as well, you could see how it works in real. There are some other sites using the same theme. You can find them below:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Site Name&lt;/th&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;OneV&amp;#39;s Den&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://onevcat.com&quot;&gt;http://onevcat.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;If you happen to be using this theme, welcome to &lt;a href=&quot;https://github.com/onevcat/vno-jekyll/pulls&quot;&gt;send me a pull request&lt;/a&gt; to add your site link here. :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;License&lt;/h4&gt;

&lt;p&gt;Great thanks to &lt;a href=&quot;https://github.com/daleanthony&quot;&gt;Dale Anthony&lt;/a&gt; and his &lt;a href=&quot;https://github.com/daleanthony/uno&quot;&gt;Uno&lt;/a&gt;. Vno Jekyll is based on Uno, and contains a lot of modification on page layout, animation, font and some more things I can not remember. Vno Jekyll is followed with Uno and be licensed as &lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 International&lt;/a&gt;. See the link for more information.&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Mar 2016 14:32:24 +0800</pubDate>
        <link>http://keyue.me/2016/03/WWDC-2016-Session-217-Introducing-SiriKit/</link>
        <guid isPermaLink="true">http://keyue.me/2016/03/WWDC-2016-Session-217-Introducing-SiriKit/</guid>
        
        
      </item>
    
      <item>
        <title>Hello World - Vno</title>
        <description>&lt;h4&gt;What&amp;#39;s this&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/onevcat/vno-jekyll&quot;&gt;Vno Jekyll&lt;/a&gt; is a theme for &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;. It is a port of my Ghost theme &lt;a href=&quot;https://github.com/onevcat/vno&quot;&gt;vno&lt;/a&gt;, which is originally developed from &lt;a href=&quot;https://github.com/daleanthony/uno&quot;&gt;Dale Anthony&amp;#39;s Uno&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Usage&lt;/h4&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git clone https://github.com/onevcat/vno-jekyll.git your_site
$ cd your_site
$ bundler install
$ bundler exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;Your site with &lt;code&gt;Vno Jekyll&lt;/code&gt; enabled should be accessible in &lt;a href=&quot;http://127.0.0.1:4000&quot;&gt;http://127.0.0.1:4000&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more information about Jekyll, please visit &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&amp;#39;s site&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Configuration&lt;/h4&gt;

&lt;p&gt;All configuration could be done in &lt;code&gt;_config.yml&lt;/code&gt;. Remember you need to restart to serve the page when after changing the config file. Everything in the config file should be self-explanatory.&lt;/p&gt;

&lt;h4&gt;Background image and avatar&lt;/h4&gt;

&lt;p&gt;You could replace the background and avatar image in &lt;code&gt;assets/images&lt;/code&gt; folder to change them.&lt;/p&gt;

&lt;h4&gt;Sites using Vno&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://onevcat.com&quot;&gt;My blog&lt;/a&gt; is using &lt;code&gt;Vno Jekyll&lt;/code&gt; as well, you could see how it works in real. There are some other sites using the same theme. You can find them below:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Site Name&lt;/th&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;OneV&amp;#39;s Den&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://onevcat.com&quot;&gt;http://onevcat.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;If you happen to be using this theme, welcome to &lt;a href=&quot;https://github.com/onevcat/vno-jekyll/pulls&quot;&gt;send me a pull request&lt;/a&gt; to add your site link here. :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;License&lt;/h4&gt;

&lt;p&gt;Great thanks to &lt;a href=&quot;https://github.com/daleanthony&quot;&gt;Dale Anthony&lt;/a&gt; and his &lt;a href=&quot;https://github.com/daleanthony/uno&quot;&gt;Uno&lt;/a&gt;. Vno Jekyll is based on Uno, and contains a lot of modification on page layout, animation, font and some more things I can not remember. Vno Jekyll is followed with Uno and be licensed as &lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 International&lt;/a&gt;. See the link for more information.&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Mar 2016 14:32:24 +0800</pubDate>
        <link>http://keyue.me/2016/03/hello-world-vno-copy/</link>
        <guid isPermaLink="true">http://keyue.me/2016/03/hello-world-vno-copy/</guid>
        
        
      </item>
    
      <item>
        <title>Hello World - Vno</title>
        <description>&lt;h4&gt;What&amp;#39;s this&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/onevcat/vno-jekyll&quot;&gt;Vno Jekyll&lt;/a&gt; is a theme for &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;. It is a port of my Ghost theme &lt;a href=&quot;https://github.com/onevcat/vno&quot;&gt;vno&lt;/a&gt;, which is originally developed from &lt;a href=&quot;https://github.com/daleanthony/uno&quot;&gt;Dale Anthony&amp;#39;s Uno&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Usage&lt;/h4&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git clone https://github.com/onevcat/vno-jekyll.git your_site
$ cd your_site
$ bundler install
$ bundler exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;Your site with &lt;code&gt;Vno Jekyll&lt;/code&gt; enabled should be accessible in &lt;a href=&quot;http://127.0.0.1:4000&quot;&gt;http://127.0.0.1:4000&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more information about Jekyll, please visit &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&amp;#39;s site&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Configuration&lt;/h4&gt;

&lt;p&gt;All configuration could be done in &lt;code&gt;_config.yml&lt;/code&gt;. Remember you need to restart to serve the page when after changing the config file. Everything in the config file should be self-explanatory.&lt;/p&gt;

&lt;h4&gt;Background image and avatar&lt;/h4&gt;

&lt;p&gt;You could replace the background and avatar image in &lt;code&gt;assets/images&lt;/code&gt; folder to change them.&lt;/p&gt;

&lt;h4&gt;Sites using Vno&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://onevcat.com&quot;&gt;My blog&lt;/a&gt; is using &lt;code&gt;Vno Jekyll&lt;/code&gt; as well, you could see how it works in real. There are some other sites using the same theme. You can find them below:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Site Name&lt;/th&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;OneV&amp;#39;s Den&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://onevcat.com&quot;&gt;http://onevcat.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;If you happen to be using this theme, welcome to &lt;a href=&quot;https://github.com/onevcat/vno-jekyll/pulls&quot;&gt;send me a pull request&lt;/a&gt; to add your site link here. :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;License&lt;/h4&gt;

&lt;p&gt;Great thanks to &lt;a href=&quot;https://github.com/daleanthony&quot;&gt;Dale Anthony&lt;/a&gt; and his &lt;a href=&quot;https://github.com/daleanthony/uno&quot;&gt;Uno&lt;/a&gt;. Vno Jekyll is based on Uno, and contains a lot of modification on page layout, animation, font and some more things I can not remember. Vno Jekyll is followed with Uno and be licensed as &lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 International&lt;/a&gt;. See the link for more information.&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Feb 2016 14:32:24 +0800</pubDate>
        <link>http://keyue.me/2016/02/hello-world-vno/</link>
        <guid isPermaLink="true">http://keyue.me/2016/02/hello-world-vno/</guid>
        
        
      </item>
    
      <item>
        <title>Sample Post</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;def print_hi(name)
  puts &amp;quot;Hi, #{name}&amp;quot;
end
print_hi(&amp;#39;Tom&amp;#39;)
#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Feb 2016 14:32:24 +0800</pubDate>
        <link>http://keyue.me/2016/02/sample-post/</link>
        <guid isPermaLink="true">http://keyue.me/2016/02/sample-post/</guid>
        
        
      </item>
    
      <item>
        <title>Hello World 2 - Vno</title>
        <description>&lt;h4&gt;What&amp;#39;s this&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/onevcat/vno-jekyll&quot;&gt;Vno Jekyll&lt;/a&gt; is a theme for &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;. It is a port of my Ghost theme &lt;a href=&quot;https://github.com/onevcat/vno&quot;&gt;vno&lt;/a&gt;, which is originally developed from &lt;a href=&quot;https://github.com/daleanthony/uno&quot;&gt;Dale Anthony&amp;#39;s Uno&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Usage&lt;/h4&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ git clone https://github.com/onevcat/vno-jekyll.git your_site
$ cd your_site
$ bundler install
$ bundler exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;Your site with &lt;code&gt;Vno Jekyll&lt;/code&gt; enabled should be accessible in &lt;a href=&quot;http://127.0.0.1:4000&quot;&gt;http://127.0.0.1:4000&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more information about Jekyll, please visit &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&amp;#39;s site&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;Configuration&lt;/h4&gt;

&lt;p&gt;All configuration could be done in &lt;code&gt;_config.yml&lt;/code&gt;. Remember you need to restart to serve the page when after changing the config file. Everything in the config file should be self-explanatory.&lt;/p&gt;

&lt;h4&gt;Background image and avatar&lt;/h4&gt;

&lt;p&gt;You could replace the background and avatar image in &lt;code&gt;assets/images&lt;/code&gt; folder to change them.&lt;/p&gt;

&lt;h4&gt;Sites using Vno&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://onevcat.com&quot;&gt;My blog&lt;/a&gt; is using &lt;code&gt;Vno Jekyll&lt;/code&gt; as well, you could see how it works in real. There are some other sites using the same theme. You can find them below:&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Site Name&lt;/th&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;OneV&amp;#39;s Den&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;http://onevcat.com&quot;&gt;http://onevcat.com&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;If you happen to be using this theme, welcome to &lt;a href=&quot;https://github.com/onevcat/vno-jekyll/pulls&quot;&gt;send me a pull request&lt;/a&gt; to add your site link here. :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;License&lt;/h4&gt;

&lt;p&gt;Great thanks to &lt;a href=&quot;https://github.com/daleanthony&quot;&gt;Dale Anthony&lt;/a&gt; and his &lt;a href=&quot;https://github.com/daleanthony/uno&quot;&gt;Uno&lt;/a&gt;. Vno Jekyll is based on Uno, and contains a lot of modification on page layout, animation, font and some more things I can not remember. Vno Jekyll is followed with Uno and be licensed as &lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 International&lt;/a&gt;. See the link for more information.&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Feb 2014 14:32:24 +0800</pubDate>
        <link>http://keyue.me/2014/02/hello-world-vno/</link>
        <guid isPermaLink="true">http://keyue.me/2014/02/hello-world-vno/</guid>
        
        
      </item>
    
  </channel>
</rss>
